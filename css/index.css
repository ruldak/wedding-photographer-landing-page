/* testimonials */
@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: true;
}

/* general styling */
.cards img {
  max-width: 100%;
}

/* Hide radio buttons */
.cards input[type="radio"] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.cards {
  --img-w: 200px;
  --duration: 300ms;
  --img-easing: cubic-bezier(0.34, 1.56, 0.64, 1);
  width: min(100% - 4rem, 800px);
  margin-inline: auto;
  display: grid;
  counter-reset: my-counter;
  height: 500px;
}

.card {
  --cards-grid-cols: auto;
  --cards-grid-rows: var(--img-w) auto;
  --cards-grid-gap: 2rem;
  --cards-footer-justify: center;

  grid-area: 1/1;
  display: grid;
  place-items: center;
  grid-template-columns: var(--cards-grid-cols);
  grid-template-rows: var(--cards-grid-rows);
  gap: var(--cards-grid-gap);

}

@media (600px < width) {
  .card {
    --cards-grid-cols: var(--img-w) auto;
    --cards-grid-rows: auto;
    --cards-grid-gap: 4rem;
    --cards-footer-justify: start;
  }
}


.card-img {
  width: 200px;
  height: 200px;
  aspect-ratio: 1 / 1;
  rotate: var(--angle, 0deg);
  border-radius: 10px;
  border: 3px solid #FFF;
  overflow: hidden;
  transform-origin: center;
  object-fit: cover;
  box-shadow: 0 0 5px 3px rgba(0 0 0 / .05);
}



.cards input:nth-of-type(1):checked+.card~.card>.card-img {
  animation: straighten-img-1 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(2):checked)>.card-img,
.cards input:nth-of-type(2):checked+.card~.card>.card-img {
  animation: straighten-img-2 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(3):checked)>.card-img,
.cards input:nth-of-type(3):checked+.card~.card>.card-img {
  animation: straighten-img-3 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(4):checked)>.card-img,
.cards input:nth-of-type(4):checked+.card~.card>.card-img {
  animation: straighten-img-4 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(5):checked)>.card-img,
.cards input:nth-of-type(5):checked+.card~.card>.card-img {
  animation: straighten-img-5 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(6):checked)>.card-img,
.cards input:nth-of-type(6):checked+.card~.card>.card-img {
  animation: straighten-img-6 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

.card:has(~input:nth-of-type(7):checked)>.card-img,
.cards input:nth-of-type(7):checked+.card~.card>.card-img {
  animation: straighten-img-7 calc(var(--duration) * 2) forwards;
  animation-timing-function: var(--img-easing);
}

/* as CSS can't remove animations, we change the animation according to which checkbox is checked  - all animations are the same (would be simpler with SCSS) */
@keyframes straighten-img-1 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-2 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-3 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-4 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-5 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-6 {
  50% {
    --angle: 0deg;
  }
}

@keyframes straighten-img-7 {
  50% {
    --angle: 0deg;
  }
}


/* stacking order - these are updated according to which card is selected */
.card {
  z-index: -1;
}

.cards input:checked+.card {
  z-index: 10 !important;
}

/* next card checked - place behind */
.card:has(+input:checked) {
  z-index: 9;
}

/* next card +1 checked - place behind */
.card:has(+input + .card + input:checked) {
  z-index: 8;
}

/* next card +2 checked - place behind */
.card:has(+input + .card +input + .card + input:checked) {
  z-index: 7;
}

/* next card +3 checked - place behind */
.card:has(+input + .card +input + .card +input + .card + input:checked) {
  z-index: 6;
}

/* next card +4 checked - place behind */
.card:has(+input + .card +input + .card +input + .card +input + .card + input:checked) {
  z-index: 5;
}

/* next card +5 checked - place behind */
.card:has(+input + .card +input + .card +input +input + .card +input + .card +input + .card + input:checked) {
  z-index: 4;
}

/* next card +6 checked - place behind */
.card:has(+input + .card +input + .card +input + .card +input +input + .card +input + .card +input + .card + input:checked) {
  z-index: 3;
}

.card-data {
  display: grid;
  gap: 1rem;
}

.card-data>.card-num {
  opacity: var(--data-opacity, 0);
  font-size: .8rem;
  color: #666;
}

.card-data>p {
  font-size: 0.9rem;

}

.card-data>h2,
.card-data>p {
  transition: var(--duration) ease-in-out;
  transition-delay: var(--data-delay, 0ms);
  opacity: var(--data-opacity, 0);
  translate: 0 var(--data-y, 20px);
}

.card-data>footer {
  display: flex;
  justify-content: var(--cards-footer-justify);
  gap: 2rem;
}

.card-data>footer label {
  margin-block-start: auto;
  cursor: pointer;
  pointer-events: var(--card-events, none);
  opacity: var(--data-opacity, 0);
  transition: color var(--duration) ease-in-out;
  color: var(--label-clr-txt, #000);
  background-color: var(--label-clr-bg, #EEE);
  border-radius: 50%;
  width: 32px;
  height: 32px;
  aspect-ratio: 1/1;
  display: grid;
  place-content: center;
  transition: background-color 300ms ease-in-out, color 300ms ease-in-out;
}


.cards input:checked:focus-visible+.card>.card-data>footer label,
.card-data>footer label:hover {
  --label-clr-txt: #FFF;
  --label-clr-bg: steelblue;
}

.cards input:checked+.card {
  --data-opacity: 1;
  --data-y: 0;
  --data-delay: var(--duration);
  --card-events: auto;
  transition: z-index;
  transition-delay: 300ms;
  /*z-index: 1;*/
}

.cards input:checked+.card>.card-img {
  animation: reveal-img calc(var(--duration) * 2) forwards;
}

@keyframes reveal-img {
  50% {
    translate: -150% 0;
    --angle: 0deg;
  }
}

/* portofolio */
.portfolio-container {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  font-family: sans-serif;
}

.portfolio-container h1 {
  color: #fff;
  text-align: left;
  width: 100%;
  width: 90%;
  margin: 0 auto;
}

.grid-container {
  columns: 5 200px;
  column-gap: 1.5rem;
  width: 90%;
  margin: 0 auto;

  div {
    width: 150px;
    margin: 0 1.5rem 1.5rem 0;
    display: inline-block;
    width: 100%;
    border: solid 1px rgb(255, 255, 255);
    padding: 5px;
    border-radius: 5px;
    transition: all .25s ease-in-out;

    &:hover img {
      filter: grayscale(0);
    }

    &:hover {
      border-color: #FFD700;
    }

    img {
      width: 100%;
      filter: grayscale(100%);
      border-radius: 5px;
      transition: all .25s ease-in-out;
    }

    p {
      margin: 5px 0;
      padding: 0;
      text-align: center;
      font-style: italic;
    }
  }
}